syntax = "proto3";

package dcsm;

import "kem.proto";
import "google/protobuf/empty.proto"; // Для ответов без специальных данных

// Сервис для Глобальной/Долгосрочной Памяти (Global/Long-Term Memory Service)
service GlobalLongTermMemory {
  // Сохраняет одну или несколько КЕП в GLM
  // Может использоваться как для создания новых, так и для перезаписи существующих (если ID совпадает)
  rpc StoreKEMs(StoreKEMsRequest) returns (StoreKEMsResponse);

  // Извлекает КЕП из GLM на основе различных критериев
  rpc RetrieveKEMs(RetrieveKEMsRequest) returns (RetrieveKEMsResponse);

  // Обновляет метаданные или другие поля существующей КЕП (частичное обновление)
  // Для полного обновления/перезаписи контента лучше использовать StoreKEMs
  rpc UpdateKEM(UpdateKEMRequest) returns (KEM); // Возвращает обновленную КЕП

  // Удаляет КЕП из GLM по ID
  rpc DeleteKEM(DeleteKEMRequest) returns (google.protobuf.Empty);
}

// ----- Сообщения для StoreKEMs -----
message StoreKEMsRequest {
  repeated KEM kems = 1; // Список КЕП для сохранения
}

message StoreKEMsResponse {
  repeated string stored_kem_ids = 1; // Список ID успешно сохраненных КЕП
  int32 success_count = 2;
  repeated string error_messages = 3; // Сообщения об ошибках, если какие-то КЕП не удалось сохранить
}

// ----- Сообщения для RetrieveKEMs -----
message KEMQuery {
  string text_query = 1; // Текстовый запрос для семантического поиска
  repeated float embedding_query = 2; // Векторный запрос для семантического поиска
  map<string, string> metadata_filters = 3; // Фильтры по полям метаданных (точное совпадение)
  // Можно добавить другие типы фильтров: диапазон дат, фильтры по релевантности и т.д.
}

message RetrieveKEMsRequest {
  KEMQuery query = 1; // Запрос для поиска КЕП
  int32 limit = 2; // Максимальное количество КЕП для возврата
  // Можно добавить параметры для пагинации (offset/token)
}

message RetrieveKEMsResponse {
  repeated KEM kems = 1; // Список найденных КЕП
}

// ----- Сообщения для UpdateKEM -----
message UpdateKEMRequest {
  string kem_id = 1; // ID КЕП для обновления
  KEM kem_data_update = 2; // Поля КЕП для обновления. Поля, которые не установлены, не будут изменены.
                           // Чтобы очистить поле, его нужно будет явно указать (например, пустая строка или специальное значение).
                           // Для обновления content или embeddings, они должны быть полностью предоставлены.
                           // ID в kem_data_update игнорируется, используется kem_id.
}

// ----- Сообщения для DeleteKEM -----
message DeleteKEMRequest {
  string kem_id = 1; // ID КЕП для удаления
}
